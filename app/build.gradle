plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}
apply plugin: 'com.android.application'
android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "com.sendi.fooddeliveryrobot"
        minSdk 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.3.2_rebuild"
        setProperty("archivesBaseName", "deliveryrobot-v" + versionCode + "-" + versionName)

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file('..\\platform.jks')
            storePassword 'android'
            keyAlias 'key'
            keyPassword 'android'
        }
        debug { //E:\Downloads\signtest\3288keys
            storeFile file("..\\platform.jks")
            storePassword 'android'
            keyAlias 'key'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            buildConfigField("boolean", "IS_LOG", "false")
            buildConfigField("boolean", "IS_TOAST", "true")
            buildConfigField("boolean", "IS_SPEAK", "true")
            buildConfigField("boolean", "IS_DEBUG", "true")
            buildConfigField("boolean", "IS_REPORT", "true")
            buildConfigField("String", "MQTT_HOST", "\"tcp://103.215.45.135:1883\"")
            buildConfigField("String", "HTTP_HOST", "\"http://172.168.201.34:9055/management_res\"")
            buildConfigField("String", "UPLOAD_LOG_HTTP_HOST", "\"http://172.168.201.34:9830/business/log/uploadFile\"")
            signingConfig signingConfigs.debug
            versionNameSuffix "-D"
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("boolean", "IS_LOG", "false")
            buildConfigField("boolean", "IS_TOAST", "true")
            buildConfigField("boolean", "IS_SPEAK", "true")
            buildConfigField("boolean", "IS_DEBUG", "false")
            buildConfigField("boolean", "IS_REPORT", "true")
            buildConfigField("String", "MQTT_HOST", "\"tcp://103.215.44.45:1883\"")
            buildConfigField("String", "HTTP_HOST", "\"http://103.215.44.45:9891/management_res\"")
            buildConfigField("String", "UPLOAD_LOG_HTTP_HOST", "\"http://103.215.44.45:9888/business/log/uploadFile\"")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures{
        dataBinding = true
        viewBinding true
    }
    packagingOptions {
        exclude "META-INF/androidx.localbroadcastmanager_localbroadcastmanager.version"
        exclude("META-INF/DEPENDENCIES")
        exclude("META-INF/LICENSE")
        exclude("META-INF/LICENSE.txt")
        exclude("META-INF/license.txt")
        exclude("META-INF/NOTICE")
        exclude("META-INF/NOTICE.txt")
        exclude("META-INF/notice.txt")
        exclude("META-INF/ASL2.0")
        exclude("META-INF/*.kotlin_module")
        resources {
            resources.excludes.add("META-INF/*")
        }
    }
    ndkVersion '20.0.5594570'
    sourceSets {
        main {
            jni {
                srcDirs 'src\\main\\jni'
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation files('libs/libusbcamera.aar')
    // =============== java 后台添加 ================
    implementation files('lib/RobotSDK-0.0.1.jar')
    implementation("com.squareup.okhttp3:okhttp:4.9.0")
    implementation files('lib/com.baidu.tts_2.6.2.2.20200629_44818d4.jar')
    implementation files('lib/AMap_Location_V4.7.2_20190927.jar')
    implementation project(path: ':ScanCodeModule')
    implementation project(path: ':aiui')
    // =============================================
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    implementation project(path: ':wifimanager')
    androidTestImplementation 'junit:junit:4.12'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    // ================= gson =====================
    implementation 'com.google.code.gson:gson:2.8.7'
    // =============== room ========================
    implementation "androidx.room:room-runtime:$room_version"
    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2"
    implementation 'in.xiandan:count-down-timer:1.0.3'
    // ============== mqtt ==========================
    //noinspection GradleCompatible
    implementation 'com.android.support:localbroadcastmanager:28.0.0'
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.4'
    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'
//    implementation 'com.orhanobut:logger:2.2.0'
    implementation 'com.apkfuns.logutils:library:1.7.5'
    implementation 'com.apkfuns.log2file:log2file:1.3.1'
    implementation 'com.tencent.bugly:crashreport:2.6.6.1'
    implementation 'org.litepal.guolindev:core:3.2.3'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'
    api 'com.jakewharton.rxbinding3:rxbinding:3.1.0' // rxjava2
    api 'com.thanosfisherman.wifiutils:wifiutils:1.6.2'
    implementation "com.qmuiteam:qmui:2.0.0-alpha10"
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:3.4.1'
    //ssh包
    implementation 'ch.ethz.ganymed:ganymed-ssh2:build210'

//    implementation project(path: ':conversation')
//    implementation("") {
//        exclude(group="com.alibaba" ,module = "fastjson")
//    }
    implementation("com.github.plexpt:chatgpt:4.1.2") {
        exclude group: 'com.alibaba', module: 'fastjson'
    }
    implementation 'org.xutils:xutils:3.9.0'
}